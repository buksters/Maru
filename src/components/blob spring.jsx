import { useRef, useEffect, useState } from "react";
import '../App.css'
import { Svg } from "@react-three/drei";
import { useSpring, animated, easings} from "@react-spring/web";

export default function Blob({archive}) {
    const blobInitial = useRef()
    const [isHovered, setHover] = useState(true)
    const [open, toggle] = useState(false)

    const shuffle = (array) => {
      return array.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)
    }

    const blobPaths = shuffle([
      "M51.5,-66.9C62.2,-52.5,63,-31.9,63.9,-13.3C64.9,5.4,65.8,22,59.7,36.1C53.5,50.2,40.1,61.8,24.6,67.3C9.2,72.8,-8.4,72.1,-22.4,65.3C-36.4,58.6,-46.9,45.9,-57.6,31.3C-68.3,16.8,-79.3,0.4,-76,-12.6C-72.7,-25.5,-55.2,-35.2,-40.1,-48.8C-25.1,-62.4,-12.5,-80,4,-84.7C20.4,-89.4,40.9,-81.2,51.5,-66.9Z",
      "M53.2,-60.8C66,-52.7,71.4,-33.1,75.3,-13C79.1,7.1,81.4,27.7,72.1,39.7C62.9,51.6,42,55,25,55.3C8,55.7,-5.2,53.1,-19.1,49.4C-33.1,45.7,-47.8,40.9,-56.7,30.3C-65.6,19.8,-68.8,3.6,-65,-10.4C-61.3,-24.3,-50.6,-35.9,-38.6,-44.2C-26.6,-52.5,-13.3,-57.4,3.5,-61.6C20.2,-65.7,40.4,-68.9,53.2,-60.8Z",
      "M40.3,-41.9C56.6,-34.3,77.4,-25.8,81.2,-13C85,-0.2,71.9,16.9,60.2,32.6C48.6,48.4,38.3,62.8,23,72.4C7.7,81.9,-12.7,86.5,-26.2,78.7C-39.7,70.9,-46.3,50.7,-52.7,33.4C-59.2,16.1,-65.6,1.7,-64.9,-13.1C-64.3,-27.9,-56.6,-43.1,-44.6,-51.5C-32.6,-59.9,-16.3,-61.4,-2.2,-58.8C12,-56.2,23.9,-49.5,40.3,-41.9Z",
      "M39.6,-46.6C50.6,-37.9,58.4,-24.8,64.8,-8.5C71.2,7.9,76.3,27.4,68.7,38.9C61.2,50.5,41.1,54,23.5,57.2C5.9,60.4,-9.1,63.2,-26.1,61.4C-43,59.7,-62,53.2,-67.1,40.6C-72.1,28,-63.1,9.2,-58.4,-9C-53.6,-27.2,-53,-44.9,-44,-53.9C-35,-63,-17.5,-63.5,-1.6,-61.6C14.3,-59.7,28.6,-55.4,39.6,-46.6Z",
      "M50.6,-60.3C65.9,-47.5,78.8,-31.8,79.8,-15.6C80.9,0.7,70.1,17.5,58.6,30.4C47,43.3,34.7,52.3,21.6,55.4C8.5,58.4,-5.4,55.6,-19.2,51.2C-33.1,46.9,-47.1,41.1,-60.1,29.4C-73.1,17.8,-85.2,0.3,-84.7,-17.1C-84.3,-34.6,-71.3,-52,-55,-64.6C-38.8,-77.3,-19.4,-85.2,-0.9,-84.1C17.7,-83.1,35.4,-73.2,50.6,-60.3Z",
      "M45.7,-53.3C56.5,-45.4,60.7,-28.4,65.6,-10.2C70.4,8.1,76,27.6,69,40.1C62.1,52.7,42.7,58.3,23.7,65.3C4.6,72.4,-14,80.9,-30.9,77.8C-47.8,74.7,-63.1,60,-68.7,43.1C-74.4,26.2,-70.4,7.3,-65.7,-10.2C-61,-27.6,-55.4,-43.6,-44.4,-51.4C-33.3,-59.2,-16.6,-58.8,0.4,-59.3C17.5,-59.8,34.9,-61.1,45.7,-53.3Z"
    ])

    const blobColors = archive ? shuffle(["#97BDBF", "#ABD5D8", "#B5E2E6", "#95BABD", "#9FC7C9"]) : shuffle(["#F2E2C2", "#c2e6f2", "#C2EEF2", "#E2DAF2", "#F2DAE8"])


    const { x } = useSpring({
      from: { x: 0 },
      to: {x: 10},
      config: { mass: 3, duration: 9000},
      loop: {reverse: true},
      reset:true
    });
    
  return (
    <>
      <animated.svg id="morph-example" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" version="1.1"
       >
        <g transform="translate(100, 100)">
          <animated.path 
            ref={blobInitial} 
            d={x.to({
              range: [0, 2, 4, 6, 8, 10],
              output: [
                ...blobPaths
              ],
            })}
            style={{
              fill: x.to({
                range: [0, 2.5, 5, 7.5, 10],
                output: [...blobColors]
              })
            }}>
          </animated.path>
        </g>
      </animated.svg>
    </>
  )

}